# Warning: This file is generated automatically, and should not be modified.
# Instead, please modify the template in the pr-checks directory and run:
#     (cd pr-checks; pip install ruamel.yaml@0.17.31 && python3 sync.py)
# to regenerate this file.

name: 'PR Check - Go: tracing with custom build steps'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: auto
  CODEQL_EXTRACTOR_JAVA_AGENT_DISABLE_KOTLIN: 'true'
on:
  push:
    branches:
    - main
    - releases/v*
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - ready_for_review
  workflow_dispatch: {}
jobs:
  go-tracing-custom-build-steps:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          version: stable-20221211
        - os: macos-latest
          version: stable-20221211
        - os: ubuntu-latest
          version: stable-20230418
        - os: macos-latest
          version: stable-20230418
        - os: ubuntu-latest
          version: stable-v2.13.5
        - os: macos-latest
          version: stable-v2.13.5
        - os: ubuntu-latest
          version: stable-v2.14.6
        - os: macos-latest
          version: stable-v2.14.6
        - os: ubuntu-latest
          version: default
        - os: macos-latest
          version: default
        - os: ubuntu-latest
          version: latest
        - os: macos-latest
          version: latest
        - os: ubuntu-latest
          version: nightly-latest
        - os: macos-latest
          version: nightly-latest
    name: 'Go: tracing with custom build steps'
    permissions:
      contents: read
      security-events: write
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    steps:
    - name: Setup Python on MacOS
      uses: actions/setup-python@v5
      if: >-
        matrix.os == 'macos-latest' && (

        matrix.version == 'stable-20221211' ||

        matrix.version == 'stable-20230418' ||

        matrix.version == 'stable-v2.13.5' ||

        matrix.version == 'stable-v2.14.6')
      with:
        python-version: '3.11'
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Prepare test
      id: prepare-test
      uses: ./.github/actions/prepare-test
      with:
        version: ${{ matrix.version }}
        use-all-platform-bundle: 'false'
    - name: Set environment variable for Swift enablement
      if: runner.os != 'Windows' && matrix.version == '20221211'
      shell: bash
      run: echo "CODEQL_ENABLE_EXPERIMENTAL_FEATURES_SWIFT=true" >> $GITHUB_ENV
    - uses: actions/setup-go@v5
      with:
        go-version: ~1.22.0
        cache: false
    - uses: ./../action/init
      with:
        languages: go
        tools: ${{ steps.prepare-test.outputs.tools-url }}
    - name: Build code
      shell: bash
      run: go build main.go
    - uses: ./../action/analyze
      with:
        upload-database: false
    - shell: bash
      run: |
        # Once we start running Bash 4.2 in all environments, we can replace the
        # `! -z` flag with the more elegant `-v` which confirms that the variable
        # is actually unset and not potentially set to a blank value.
        if [[ ! -z "${CODEQL_ACTION_DID_AUTOBUILD_GOLANG}" ]]; then
          echo "Expected the Go autobuilder not to be run, but the" \
            "CODEQL_ACTION_DID_AUTOBUILD_GOLANG environment variable was set."
          exit 1
        fi
        cd "$RUNNER_TEMP/codeql_databases"
        if [[ ! -d go ]]; then
          echo "Did not find a Go database"
          exit 1
        fi
    env:
      CODEQL_ACTION_TEST_MODE: true
